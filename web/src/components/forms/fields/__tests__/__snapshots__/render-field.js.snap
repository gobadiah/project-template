// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RenderField should match snapshot 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<RenderField
  cols={70}
  column={false}
  input={
    Object {
      "name": "example field",
    }
  }
  label="Some example field"
  meta={
    Object {
      "error": Array [
        "This is one error",
        "this is another",
      ],
      "touched": true,
      "warning": Array [
        "This is one warning",
        "yet another",
      ],
    }
  }
  required={false}
  rows={7}
  type="text"
>
  <Styled(div)>
    <div
      className="emotion-0 emotion-1"
    >
      <input
        className=" "
        key="component"
        name="example field"
        placeholder="undefined"
        type="text"
      />
      <Error
        error={
          Array [
            "This is one error",
            "this is another",
          ]
        }
        key="error"
      >
        <div
          key="0"
        />
        <div
          key="1"
        />
      </Error>
      <Warning
        key="warning"
        warning={
          Array [
            "This is one warning",
            "yet another",
          ]
        }
      >
        <div
          key="0"
        />
        <div
          key="1"
        />
      </Warning>
    </div>
  </Styled(div)>
</RenderField>
`;

exports[`RenderField should match snapshot with column=true 1`] = `
.emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<RenderField
  cols={70}
  column={true}
  input={
    Object {
      "name": "example field",
    }
  }
  label="Some example field"
  meta={
    Object {
      "error": Array [
        "This is one error",
        "this is another",
      ],
      "touched": true,
      "warning": Array [
        "This is one warning",
        "yet another",
      ],
    }
  }
  required={false}
  rows={7}
  type="text"
>
  <Styled(div)>
    <div
      className="emotion-0 emotion-1"
    >
      <input
        className=" "
        key="component"
        name="example field"
        placeholder="undefined"
        type="text"
      />
      <Error
        error={
          Array [
            "This is one error",
            "this is another",
          ]
        }
        key="error"
      >
        <div
          key="0"
        />
        <div
          key="1"
        />
      </Error>
      <Warning
        key="warning"
        warning={
          Array [
            "This is one warning",
            "yet another",
          ]
        }
      >
        <div
          key="0"
        />
        <div
          key="1"
        />
      </Warning>
    </div>
  </Styled(div)>
</RenderField>
`;
